Definicao de nomes de classes e pastas do projeto


NOMECLATURA PARA CLASSES E PASTAS DE EXERCICIO
Cada exercicio tera uma pasta propria contendo suas proprias classes, cenas e demais
arquivos. Isso manterá a organizacao do projeto.

Exemplo:
Exercicio1
    -> Exercicio1ViewController
    -> Exercicio1GameDefinition
    -> Exercicio1Scene

O nome de cada classe sera de acordo com uma nomeclatura:

->Classes que tem a ver com algum tipo de exercicio em si iniciarao com "Exercicio"x<comp>, onde:

    ->Exercicio: significa que a classe compoe um exercicio
    ->x: indica alguma identificacao numerica do exercicio
    -><comp>: algum complemento, como por exemplo "ViewController" para indicar controladora



Dentro da pasta Controllers, deverao ficar as classes que fazem referencia as controladoras de
cada exercício, sendo que cada pasta deverá conter um nome sugestivo (ex: Exercicio1).
As demais classes dentro desta pasta também deverão estar dentro de subdiretorios com nomes
sugestivos (ex: Feedbacks, SelecaoDeExercicios).
A pasta View tambem segue um ritmo praticamente parecido, caso necessário. Os únicos arquivos
deverão estar na raiz desta pasta são os de storyboard.





SPRITEKIT
Para as cenas e arquvios que utilizam o SpriteKit, deverá haver um diretorio dentro do projeto
entitulado "SpriteKit", responsável por armazenar todos os elementos. Dentro desta pasta, deverão
haver os seguintes diretorios:
    ->View: Conterão os arquivos de cenas para cada exercício, sendo que cada exercício deverá
        estar contido dentro de uma outra pasta, seguindo regra semelhante com a de cima para
        os controladores.
    ->Controller:  Armazenará o nome dos controladores de cada exercício.
    ->GameScene: Armazenarão as classes com que controlam as ações dentro de cada cena e deverão
        seguir a nomeclatura: "Exercicio"x"GameScene", onde o x é o número do exercício.





NOMECLATURA PARA EXTENSIONS
As extensions estarao dentro de uma pasta com o nome "Extensions" e seguirao a
seguinte nomeclatura:
    <classe>_<extension>_<describe>, onde:

    ->classe: Indica a classe que recebera a extension, ex: UIView, SKSPriteNode,etc.
    -><extension>: palavra indicada para extensao
    -><describe>: uma breve descricao do que a extension esta fazendo, ex: animacao





NOMECLATURA PARA CLASSES DE SUPORTE A UI
Elementos de suporte a UI estarão dentro de uma pasta denominada "Elementos_UI" e
deverao ter o nome que lhes representam, nao seguindo nenhuma nomeclatura
especifica.






NOMECLATURA PARA BANCO DE DADOS E STORES
Todos os arquivos que correspondem a armazenamento de dados, seja em banco ou
estaticas, estarão dentro da pasta Models, sendo que as informacoes estaticas
estarão dentro de uma subpasta denominada Stores e as informacoes referentes a
banco de dados estarao dentro da pasta BD.

Para as classes que armazenarao dados de forma estatica, as mesmas deveram seguir
o seguinte padrao
    <NomeDaClasse>Store, onde:

    -><NomeDaClasse>: Nome da classe qeu deve estar em conjunto com a sua model
    ->Store: palavra reservada para indicar que ela sera responsavel por armazenar dados de forma estatica

Exemplo:
    ImagemExercicio1 <- classe model
    ImagemExercicio1Store  <- classe de armazenamento de dados estaticos







